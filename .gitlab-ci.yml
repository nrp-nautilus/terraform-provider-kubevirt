stages:
  - test
  - go-test
  - fetch-github-results

test:
  stage: test
  image: alpine:latest
  script:
    - echo "Hello World"
    - echo "Simple CI/CD test"
  rules:
    - if: $CI_COMMIT_TAG

go-test:
  stage: go-test
  image: golang:1.21-alpine
  before_script:
    - apk add --no-cache git wget unzip
    - wget -O terraform.zip https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip
    - unzip terraform.zip
    - mv terraform /usr/local/bin/
    - terraform version
    - go mod download
    - go mod verify
  script:
    - echo "Running Go tests..."
    - go test -v ./...
    - echo "Running Go vet..."
    - go vet ./...
    - echo "Running Go fmt check..."
    - go fmt ./...
    - echo "‚úÖ Go tests completed successfully!"
  rules:
    - if: $CI_COMMIT_TAG

fetch-github-results:
  stage: fetch-github-results
  image: alpine:latest
  before_script:
    - apk add --no-cache curl jq
  script:
    - echo "üîç Phase 3: Basic GitHub API check..."
    - echo "Tag: ${CI_COMMIT_TAG}"
    - echo "Checking if GitHub has this tag..."
    - RELEASE_URL="https://api.github.com/repos/nrp-nautilus/terraform-provider-kubevirt/releases/tags/${CI_COMMIT_TAG}"
    - echo "GitHub API URL: $RELEASE_URL"
    - RESPONSE=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" "$RELEASE_URL")
    - echo "GitHub API Response: $RESPONSE"
    - echo "‚úÖ Phase 3 completed - basic GitHub API check"
  rules:
    - if: $CI_COMMIT_TAG
  dependencies: []
