stages:
  - test
  - build
  - release

variables:
  GO_VERSION: "1.21"
  PROVIDER_NAME: "kubevirt"
  PROVIDER_NAMESPACE: "terraform-dev"

# Test stage
test:
  stage: test
  image: golang:${GO_VERSION}-alpine
  before_script:
    - apk add --no-cache git terraform
    - go mod download
    - go mod verify
  script:
    - go test -v ./...
    - go vet ./...
    - go fmt ./...
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

# Build stage
build:
  stage: build
  image: golang:${GO_VERSION}-alpine
  before_script:
    - apk add --no-cache git
    - go mod download
  script:
    - mkdir -p bin
    - GOOS=linux GOARCH=amd64 go build -o bin/terraform-provider-${PROVIDER_NAME}_${CI_COMMIT_SHA} .
    - GOOS=darwin GOARCH=amd64 go build -o bin/terraform-provider-${PROVIDER_NAME}_${CI_COMMIT_SHA}_darwin .
    - ls -la bin/
  artifacts:
    paths:
      - bin/
    expire_in: 1 week
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    - if: $CI_COMMIT_TAG

# Release stage
release:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  before_script:
    - echo "Creating release for version ${CI_COMMIT_TAG}"
  script:
    - |
      release-cli create \
        --name "Release ${CI_COMMIT_TAG}" \
        --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"terraform-provider-${PROVIDER_NAME}-linux-amd64\",\"url\":\"${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/bin/terraform-provider-${PROVIDER_NAME}_${CI_COMMIT_SHA}?job=build\"}" \
        --assets-link "{\"name\":\"terraform-provider-${PROVIDER_NAME}-darwin-amd64\",\"url\":\"${CI_PROJECT_URL}/-/jobs/artifacts/${CI_COMMIT_TAG}/raw/bin/terraform-provider-${PROVIDER_NAME}_${CI_COMMIT_SHA}_darwin?job=build\"}"
  rules:
    - if: $CI_COMMIT_TAG
  dependencies:
    - build
